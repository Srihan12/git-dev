resource "aws_instance" "example" {
  ami           = "ami-037774efca2da0726" # Replace with your desired AMI ID
  instance_type = "t2.micro"
  key_name      = "ohio" # Replace with your key pair name

  tags = {
    Name = "example-instance"
  }
}


resource "aws_vpc" "test-vpc" {
  cidr_block = "10.0.0.0/16"
}


resource "aws_security_group" "test_access" {
  name        = "test_access"
  vpc_id      = aws_vpc.test-vpc.id
  description = "allow ssh and http"

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }


}

resource "aws_internet_gateway" "test-igw" {
  vpc_id = aws_vpc.test-vpc.id

  tags = {
    Name = "test-igw"
  }
}

#public subnet

resource "aws_subnet" "public-subnet" {
  vpc_id            = aws_vpc.test-vpc.id
  availability_zone = "us-east-2a"
  cidr_block        = "10.0.0.0/24"

  tags = {
    Name = "Public-subnet"
  }
}


#private subnet

resource "aws_subnet" "private-subnet" {
  vpc_id            = aws_vpc.test-vpc.id
  availability_zone = "us-east-2b"
  cidr_block        = "10.0.1.0/24"

  tags = {
    Name = "Private-subnet" #security group
  }
}

#public route table
resource "aws_route_table" "public-rt" {
  vpc_id = aws_vpc.test-vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.test-igw.id
  }


  tags = {
    Name = "public-rt"

  }
}


#route Tatable assosication code
resource "aws_route_table_association" "public-asso" {
  subnet_id      = aws_subnet.public-subnet.id
  route_table_id = aws_route_table.public-rt.id
}

resource "aws_ebs_volume" "example1" {
  availability_zone = "us-east-2a"
  size              = 40

  tags = {
    Name = "HelloWorld"
  }
}


resource "aws_volume_attachment" "ebs_att" {
  device_name = "/dev/sdh"
  volume_id   = aws_ebs_volume.example1.id
  instance_id = aws_instance.web-server.id

  depends_on = [
    aws_instance.example,
    aws_ebs_volume.example1
  ]
}


resource "aws_eip" "nat-eip" {
}
### create Nat gateway
resource "aws_nat_gateway" "my-ngw" {
  allocation_id = aws_eip.nat-eip.id
  subnet_id     = aws_subnet.public-subnet.id
}


resource "aws_route_table" "private-rt" {
  vpc_id = aws_vpc.test-vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_nat_gateway.my-ngw.id
  }


  tags = {
    Name = "private-rt"
  }
}


##route Tatable assosication code
resource "aws_route_table_association" "private-asso" {
  subnet_id      = aws_subnet.private-subnet.id
  route_table_id = aws_route_table.private-rt.id
}


resource "aws_instance" "web-server" {
  ami                         = "ami-037774efca2da0726"
  associate_public_ip_address = true
  subnet_id                   = aws_subnet.public-subnet.id
  instance_type               = "t2.micro"
  key_name                    = "ohio"
  security_groups             = [aws_security_group.test_access.id]
  tags = {
    Name     = "tera-instance"
    Stage    = "testing"
    Location = "INDIA"
  }

}

resource "aws_instance" "web-server-private" {
  ami                         = "ami-037774efca2da0726"
  subnet_id                   = aws_subnet.private-subnet.id
  instance_type               = "t2.micro"
  key_name                    = "ohio"
  security_groups             = [aws_security_group.test_access.id]
  tags = {
    Name     = "tera-instance"
    Stage    = "testing"
    Location = "INDIA"
  }
}
